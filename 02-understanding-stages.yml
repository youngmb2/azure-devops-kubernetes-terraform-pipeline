# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
 - stage: Build
   jobs:
   - job: FirstJob
     steps:
     - bash: echo Build FirstJob
     - bash: echo $(PipelineLevelVariable)
     - bash: echo $(Build.BuildNumber)
     - bash: echo $(Build.BuildID)
     - bash: echo $(Build.SourceBranchName)
     - bash: echo $(Build.SourcesDirectory)
     - bash: ls -R $(System.DefaultWorkingDirectory)
     - bash: echo $(Build.ArtifactStagingDirectory)
     - bash: java -version
     - bash: node --version
     - bash: python --version
     - bash: mvn -version
     - bash: ls -R $(Build.ArtifactStagingDirectory)
     - task: CopyFiles@2
       inputs:
         SourceFolder: '$(System.DefaultWorkingDirectory)'
         Contents: |
           **/*.yaml
           **/*.tf
         TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: ls -R $(Build.ArtifactStagingDirectory)
  #  - job: SecondJob
  #    steps:
  #    - bash: echo Build SecondJob
#  - stage: DevDeploy
#    variables: 
#      environment: Dev
#    dependsOn: Build
#    jobs:
#    - job: DevDeployJob
#      steps:
#      - bash: echo $(environment)DeployJob
#  - stage: QADeploy
#    variables: 
#      environment: Dev
#    dependsOn:
#    - Build 
#    - DevDeploy
#    jobs:
#    - job: QADeployJob
#      steps:
#      - bash: echo $(environment)DeployJob
#  - stage: ProdDeploy
#    variables: 
#      environment: Dev
#    dependsOn: 
#    - Build
#    - DevDeploy
#    - QADeploy
#    jobs:
#     - job: ProdDeployJob
#       steps:
#        - bash: echo $(environment)DeployJob




